type = "directrequest"
schemaVersion = 1
name = "Get > DecryptStory"
contractAddress = "0xE52F4aedAb0581df41fB5aBA4d46dda213C962f3"
maxTaskDuration = "0s"
observationSource = """
decode_log [type="ethabidecodelog"
abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
data="$(jobRun.logData)"
topics="$(jobRun.logTopics)"]

decode_cbor  [type="cborparse" data="$(decode_log.data)"]
fetch        [type="bridge" name="decrypt-story" requestData="{\\"id\\":$(jobSpec.externalJobID),\\"data\\":{\\"cid\\":$(decode_cbor.cid), \\"sender\\":$(decode_cbor.sender), \\"request_id\\":$(decode_log.requestId)}}"]

decode_log -> decode_cbor -> fetch

parse_cid   [type="jsonparse" path="cid" data="$(fetch)"]

fetch -> parse_cid
parse_cid -> encode_data

encode_data  [type="ethabiencode" abi="(bytes32 requestId, bytes cid)" 
    data="{ \\"requestId\\": $(decode_log.requestId), \\"cid\\": $(parse_cid) }"]
encode_tx    [type="ethabiencode"
              abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
              data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"
             ]
submit_tx    [type="ethtx" to="0xE52F4aedAb0581df41fB5aBA4d46dda213C962f3" data="$(encode_tx)"]

encode_data -> encode_tx -> submit_tx

"""